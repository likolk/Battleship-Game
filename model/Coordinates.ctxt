#BlueJ class context
comment0.target=Coordinates
comment0.text=\n\ Class\ Coordinates\ which\ is\ used\ to\ store\ the\ coordinates\ of\ a\ ship.\n\ @author\ kelvin.likollari@usi.ch\n
comment1.params=x1\ y1
comment1.target=Coordinates(int,\ int)
comment1.text=\n\ Constructor\ of\ Coordinates'\ class.\n\ @param\ x1\ represents\ the\ x-axis\ coordinate\n\ @param\ y1\ represents\ the\ y-axis\ coordinate\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\n\ The\ following\ method\ returns\ a\ string\ representation\ of\ the\ coordinates.\n\ @return\ the\ string\ representation\ of\ the\ coordinates\n
comment2.params=
comment2.target=int\ getX()
comment2.text=\n\ Method\ to\ get\ the\ x\ coordinate.\n\ @return\ the\ x\ coordinate\n
comment3.params=
comment3.target=int\ getY()
comment3.text=\n\ Method\ to\ get\ the\ y\ coordinate.\n\ @return\ the\ y\ coordinate\n
comment4.params=x1
comment4.target=void\ setX(int)
comment4.text=\n\ Method\ to\ set\ the\ x\ coordinate.\n\ @param\ x1\ the\ x\ coordinate\n
comment5.params=y1
comment5.target=void\ setY(int)
comment5.text=\n\ Method\ to\ set\ the\ y\ coordinate.\n\ @param\ y1\ the\ y\ coordinate\n
comment6.params=other
comment6.target=double\ getDistance(Coordinates)
comment6.text=\n\ Method\ to\ get\ the\ distance\ between\ two\ coordinates.\n\ @param\ other\ the\ other\ coordinates\n\ @return\ the\ distance\n
comment7.params=other
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\n\ Method\ to\ check\ whether\ 2\ coordinates\ are\ equal.\n\ @param\ other\ the\ other\ coordinates.\n\ @return\ true\ if\ the\ coordinates\ are\ equal,\ false\ otherwise\n
comment8.params=
comment8.target=void\ resetCoordinates()
comment8.text=\n\ This\ method\ resets\ the\ coordinates\ to\ 0,0.\n
comment9.params=
comment9.target=int\ hashCode()
comment9.text=\n\ HashCode\ class.\n
numComments=11
