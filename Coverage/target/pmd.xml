<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd"
    version="6.21.0" timestamp="2022-05-30T23:31:02.127">
<file name="/Users/cuenc/Documents/PF2-Project/src/gui/JWelcome.java">
<violation beginline="1" endline="168" begincolumn="1" endcolumn="1" rule="TooManyStaticImports" ruleset="Code Style" package="gui" class="JWelcome" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#toomanystaticimports" priority="3">
Too many static imports may lead to messy code
</violation>
</file>
<file name="/Users/cuenc/Documents/PF2-Project/src/model/DisplayField.java">
<violation beginline="27" endline="27" begincolumn="9" endcolumn="24" rule="AssignmentToNonFinalStatic" ruleset="Error Prone" package="model" class="DisplayField" method="DisplayField" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#assignmenttononfinalstatic" priority="3">
Possible unsafe assignment to a non-final static field in a constructor.
</violation>
</file>
<file name="/Users/cuenc/Documents/PF2-Project/src/model/Field.java">
<violation beginline="3" endline="3" begincolumn="1" endcolumn="27" rule="UnusedImports" ruleset="Best Practices" package="model" class="Field" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedimports" priority="4">
Avoid unused imports such as 'java.util.ArrayList'
</violation>
<violation beginline="15" endline="621" begincolumn="8" endcolumn="1" rule="CyclomaticComplexity" ruleset="Design" package="model" class="Field" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The class 'Field' has a total cyclomatic complexity of 102 (highest 17).
</violation>
<violation beginline="22" endline="22" begincolumn="35" endcolumn="39" rule="FieldNamingConventions" ruleset="Code Style" package="model" class="Field" variable="cells" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#fieldnamingconventions" priority="1">
The constant name 'cells' doesn't match '[A-Z][A-Z_0-9]*'
</violation>
<violation beginline="388" endline="437" begincolumn="12" endcolumn="5" rule="CyclomaticComplexity" ruleset="Design" package="model" class="Field" method="isValidPlacementForShip" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'isValidPlacementForShip(int, int, int, String, boolean)' has a cyclomatic complexity of 17.
</violation>
</file>
<file name="/Users/cuenc/Documents/PF2-Project/src/model/Game.java">
<violation beginline="1" endline="1224" begincolumn="1" endcolumn="2" rule="ExcessivePublicCount" ruleset="Design" package="model" class="Game" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#excessivepubliccount" priority="3">
This class has a bunch of public methods and attributes
</violation>
<violation beginline="13" endline="1224" begincolumn="8" endcolumn="1" rule="ExcessiveClassLength" ruleset="Design" package="model" class="Game" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#excessiveclasslength" priority="3">
Avoid really long classes.
</violation>
<violation beginline="13" endline="1224" begincolumn="8" endcolumn="1" rule="GodClass" ruleset="Design" package="model" class="Game" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#godclass" priority="3">
Possible God Class (WMC=153, ATFD=64, TCC=20.124%)
</violation>
<violation beginline="13" endline="1224" begincolumn="8" endcolumn="1" rule="CyclomaticComplexity" ruleset="Design" package="model" class="Game" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The class 'Game' has a total cyclomatic complexity of 153 (highest 11).
</violation>
<violation beginline="13" endline="1224" begincolumn="19" endcolumn="1" rule="TooManyMethods" ruleset="Design" package="model" class="Game" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#toomanymethods" priority="3">
This class has too many methods, consider refactoring it.
</violation>
<violation beginline="13" endline="1224" begincolumn="8" endcolumn="1" rule="TooManyFields" ruleset="Design" package="model" class="Game" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#toomanyfields" priority="3">
Too many fields
</violation>
<violation beginline="14" endline="14" begincolumn="13" endcolumn="30" rule="SingularField" ruleset="Design" package="model" class="Game" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#singularfield" priority="3">
Perhaps 'playersNumber' could be replaced by a local variable.
</violation>
<violation beginline="39" endline="39" begincolumn="33" endcolumn="36" rule="FieldNamingConventions" ruleset="Code Style" package="model" class="Game" variable="name" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#fieldnamingconventions" priority="1">
The constant name 'name' doesn't match '[A-Z][A-Z_0-9]*'
</violation>
<violation beginline="49" endline="49" begincolumn="17" endcolumn="25" rule="UnusedPrivateField" ruleset="Best Practices" package="model" class="Game" variable="shipsShot" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedprivatefield" priority="3">
Avoid unused private fields such as 'shipsShot'.
</violation>
<violation beginline="50" endline="50" begincolumn="25" endcolumn="35" rule="UnusedPrivateField" ruleset="Best Practices" package="model" class="Game" variable="coordinates" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedprivatefield" priority="3">
Avoid unused private fields such as 'coordinates'.
</violation>
<violation beginline="79" endline="79" begincolumn="25" endcolumn="34" rule="UnusedFormalParameter" ruleset="Best Practices" package="model" class="Game" method="Game" variable="scannerino" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedformalparameter" priority="3">
Avoid unused constructor parameters such as 'scannerino'.
</violation>
<violation beginline="79" endline="81" begincolumn="12" endcolumn="5" rule="UncommentedEmptyConstructor" ruleset="Documentation" package="model" class="Game" method="Game" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_documentation.html#uncommentedemptyconstructor" priority="3">
Document empty constructor
</violation>
<violation beginline="89" endline="89" begincolumn="9" endcolumn="14" rule="AssignmentToNonFinalStatic" ruleset="Error Prone" package="model" class="Game" method="Game" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#assignmenttononfinalstatic" priority="3">
Possible unsafe assignment to a non-final static field in a constructor.
</violation>
<violation beginline="90" endline="90" begincolumn="9" endcolumn="10" rule="AssignmentToNonFinalStatic" ruleset="Error Prone" package="model" class="Game" method="Game" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#assignmenttononfinalstatic" priority="3">
Possible unsafe assignment to a non-final static field in a constructor.
</violation>
<violation beginline="170" endline="199" begincolumn="19" endcolumn="5" rule="CyclomaticComplexity" ruleset="Design" package="model" class="Game" method="welcomingInstructions" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'welcomingInstructions(Scanner)' has a cyclomatic complexity of 11.
</violation>
<violation beginline="248" endline="248" begincolumn="24" endcolumn="26" rule="UselessParentheses" ruleset="Code Style" package="model" class="Game" method="setSecondPlayerShips" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="271" endline="271" begincolumn="31" endcolumn="35" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Game" method="setPlayerShipsManually" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="295" endline="295" begincolumn="36" endcolumn="52" rule="AvoidDuplicateLiterals" ruleset="Error Prone" package="model" class="Game" method="setPlayerShipsManually" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal &quot;Current Score: &quot; appears 5 times in this file; the first occurrence is on line 295
</violation>
<violation beginline="320" endline="320" begincolumn="31" endcolumn="35" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Game" method="setSecondPlayerShipsManually" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="343" endline="343" begincolumn="30" endcolumn="34" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Game" method="placeShipRandomlyV2" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="367" endline="367" begincolumn="30" endcolumn="34" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Game" method="placeShipRandomlyPVP" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="393" endline="393" begincolumn="30" endcolumn="34" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Game" method="placeShipRandomlySecondAi" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="433" endline="433" begincolumn="20" endcolumn="27" rule="AvoidDuplicateLiterals" ruleset="Error Prone" package="model" class="Game" method="startGamePvsAI" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal &quot;Player&quot; appears 4 times in this file; the first occurrence is on line 433
</violation>
<violation beginline="447" endline="447" begincolumn="1" endcolumn="2" rule="CommentSize" ruleset="Documentation" package="model" class="Game" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_documentation.html#commentsize" priority="3">
Comment is too large: Line too long
</violation>
<violation beginline="457" endline="457" begincolumn="1" endcolumn="2" rule="CommentSize" ruleset="Documentation" package="model" class="Game" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_documentation.html#commentsize" priority="3">
Comment is too large: Line too long
</violation>
<violation beginline="519" endline="519" begincolumn="20" endcolumn="30" rule="AvoidDuplicateLiterals" ruleset="Error Prone" package="model" class="Game" method="startGameAIvsAI" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal &quot;Second AI&quot; appears 4 times in this file; the first occurrence is on line 519
</violation>
<violation beginline="559" endline="586" begincolumn="13" endcolumn="13" rule="SwitchStmtsShouldHaveDefault" ruleset="Best Practices" package="model" class="Game" method="declareWinner" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault" priority="3">
Switch statements should have a default label
</violation>
<violation beginline="603" endline="603" begincolumn="31" endcolumn="35" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Game" method="playerTurnToMakeAMove" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="622" endline="622" begincolumn="18" endcolumn="26" rule="AvoidCatchingGenericException" ruleset="Design" package="model" class="Game" method="playerTurnToMakeAMove" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#avoidcatchinggenericexception" priority="3">
Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
</violation>
<violation beginline="639" endline="639" begincolumn="31" endcolumn="35" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Game" method="aiTurnToMakeAMove" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="662" endline="662" begincolumn="18" endcolumn="26" rule="AvoidCatchingGenericException" ruleset="Design" package="model" class="Game" method="aiTurnToMakeAMove" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#avoidcatchinggenericexception" priority="3">
Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
</violation>
<violation beginline="751" endline="753" begincolumn="19" endcolumn="5" rule="LinguisticNaming" ruleset="Code Style" package="model" class="Game" method="getAiShipSymbol" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The getter 'getAiShipSymbol' should not return void linguistically
</violation>
<violation beginline="759" endline="774" begincolumn="19" endcolumn="5" rule="LinguisticNaming" ruleset="Code Style" package="model" class="Game" method="getAiShipSymbol" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The getter 'getAiShipSymbol' should not return void linguistically
</violation>
<violation beginline="762" endline="762" begincolumn="30" endcolumn="34" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Game" method="getAiShipSymbol" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="763" endline="763" begincolumn="32" endcolumn="79" rule="AvoidDuplicateLiterals" ruleset="Error Prone" package="model" class="Game" method="getAiShipSymbol" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal &quot;What symbol do you want to use for your ships?&quot; appears 4 times in this file; the first occurrence is on line 763
</violation>
<violation beginline="766" endline="766" begincolumn="36" endcolumn="75" rule="AvoidDuplicateLiterals" ruleset="Error Prone" package="model" class="Game" method="getAiShipSymbol" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal &quot;Please enter a single character input.&quot; appears 4 times in this file; the first occurrence is on line 766
</violation>
<violation beginline="780" endline="795" begincolumn="19" endcolumn="5" rule="LinguisticNaming" ruleset="Code Style" package="model" class="Game" method="getPlayerShipSymbol" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The getter 'getPlayerShipSymbol' should not return void linguistically
</violation>
<violation beginline="783" endline="783" begincolumn="30" endcolumn="34" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Game" method="getPlayerShipSymbol" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="801" endline="816" begincolumn="19" endcolumn="5" rule="LinguisticNaming" ruleset="Code Style" package="model" class="Game" method="getSecondPlayerShipSymbol" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The getter 'getSecondPlayerShipSymbol' should not return void linguistically
</violation>
<violation beginline="804" endline="804" begincolumn="30" endcolumn="34" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Game" method="getSecondPlayerShipSymbol" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="823" endline="838" begincolumn="19" endcolumn="5" rule="LinguisticNaming" ruleset="Code Style" package="model" class="Game" method="getSecondAiShipSymbol" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The getter 'getSecondAiShipSymbol' should not return void linguistically
</violation>
<violation beginline="826" endline="826" begincolumn="30" endcolumn="34" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Game" method="getSecondAiShipSymbol" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="842" endline="842" begincolumn="1" endcolumn="2" rule="CommentSize" ruleset="Documentation" package="model" class="Game" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_documentation.html#commentsize" priority="3">
Comment is too large: Line too long
</violation>
<violation beginline="845" endline="847" begincolumn="19" endcolumn="5" rule="LinguisticNaming" ruleset="Code Style" package="model" class="Game" method="getSecondAiShipSymbol" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The getter 'getSecondAiShipSymbol' should not return void linguistically
</violation>
<violation beginline="890" endline="890" begincolumn="23" endcolumn="28" rule="AvoidDuplicateLiterals" ruleset="Error Prone" package="model" class="Game" method="printHighestScore" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal &quot; to &quot; appears 6 times in this file; the first occurrence is on line 890
</violation>
<violation beginline="952" endline="952" begincolumn="18" endcolumn="26" rule="AvoidCatchingGenericException" ruleset="Design" package="model" class="Game" method="secondPlayerTurnToMakeAMove" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#avoidcatchinggenericexception" priority="3">
Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
</violation>
<violation beginline="991" endline="991" begincolumn="18" endcolumn="26" rule="AvoidCatchingGenericException" ruleset="Design" package="model" class="Game" method="secondAiTurnToMakeAMove" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#avoidcatchinggenericexception" priority="3">
Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
</violation>
</file>
<file name="/Users/cuenc/Documents/PF2-Project/src/model/Player.java">
<violation beginline="17" endline="498" begincolumn="8" endcolumn="1" rule="CyclomaticComplexity" ruleset="Design" package="model" class="Player" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The class 'Player' has a total cyclomatic complexity of 83 (highest 10).
</violation>
<violation beginline="23" endline="23" begincolumn="37" endcolumn="37" rule="FinalFieldCouldBeStatic" ruleset="Design" package="model" class="Player" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#finalfieldcouldbestatic" priority="3">
This final field could be made static
</violation>
<violation beginline="41" endline="43" begincolumn="12" endcolumn="5" rule="CallSuperInConstructor" ruleset="Code Style" package="model" class="Player" method="Player" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#callsuperinconstructor" priority="3">
It is a good practice to call super() in a constructor
</violation>
<violation beginline="49" endline="51" begincolumn="12" endcolumn="5" rule="CallSuperInConstructor" ruleset="Code Style" package="model" class="Player" method="Player" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#callsuperinconstructor" priority="3">
It is a good practice to call super() in a constructor
</violation>
<violation beginline="153" endline="153" begincolumn="13" endcolumn="15" rule="UnusedLocalVariable" ruleset="Best Practices" package="model" class="Player" method="shootPlayerRow" variable="col" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedlocalvariable" priority="3">
Avoid unused local variables such as 'col'.
</violation>
<violation beginline="156" endline="156" begincolumn="25" endcolumn="29" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Player" method="shootPlayerRow" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="162" endline="162" begincolumn="40" endcolumn="94" rule="AvoidDuplicateLiterals" ruleset="Error Prone" package="model" class="Player" method="shootPlayerRow" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal &quot;Invalid input. Please enter a number between 0 and 9.&quot; appears 4 times in this file; the first occurrence is on line 162
</violation>
<violation beginline="193" endline="193" begincolumn="13" endcolumn="15" rule="UnusedLocalVariable" ruleset="Best Practices" package="model" class="Player" method="shootPlayerCol" variable="row" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedlocalvariable" priority="3">
Avoid unused local variables such as 'row'.
</violation>
<violation beginline="197" endline="197" begincolumn="25" endcolumn="29" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Player" method="shootPlayerCol" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="234" endline="234" begincolumn="13" endcolumn="15" rule="UnusedLocalVariable" ruleset="Best Practices" package="model" class="Player" method="inWhichRowToPutShip" variable="col" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedlocalvariable" priority="3">
Avoid unused local variables such as 'col'.
</violation>
<violation beginline="237" endline="237" begincolumn="25" endcolumn="29" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Player" method="inWhichRowToPutShip" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="243" endline="243" begincolumn="40" endcolumn="55" rule="AvoidDuplicateLiterals" ruleset="Error Prone" package="model" class="Player" method="inWhichRowToPutShip" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal &quot;Invalid input.&quot; appears 8 times in this file; the first occurrence is on line 243
</violation>
<violation beginline="273" endline="273" begincolumn="13" endcolumn="15" rule="UnusedLocalVariable" ruleset="Best Practices" package="model" class="Player" method="inWhichRowToPutShipForSecondPlayer" variable="col" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedlocalvariable" priority="3">
Avoid unused local variables such as 'col'.
</violation>
<violation beginline="276" endline="276" begincolumn="25" endcolumn="29" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Player" method="inWhichRowToPutShipForSecondPlayer" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="312" endline="312" begincolumn="13" endcolumn="15" rule="UnusedLocalVariable" ruleset="Best Practices" package="model" class="Player" method="inWhichColToPutShip" variable="row" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedlocalvariable" priority="3">
Avoid unused local variables such as 'row'.
</violation>
<violation beginline="316" endline="316" begincolumn="25" endcolumn="29" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Player" method="inWhichColToPutShip" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="350" endline="350" begincolumn="13" endcolumn="15" rule="UnusedLocalVariable" ruleset="Best Practices" package="model" class="Player" method="inWhichColToPutShipForSecondPlayer" variable="row" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedlocalvariable" priority="3">
Avoid unused local variables such as 'row'.
</violation>
<violation beginline="354" endline="354" begincolumn="25" endcolumn="29" rule="SimplifyBooleanExpressions" ruleset="Design" package="model" class="Player" method="inWhichColToPutShipForSecondPlayer" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="387" endline="421" begincolumn="12" endcolumn="5" rule="CyclomaticComplexity" ruleset="Design" package="model" class="Player" method="whichDirectionToPutShip" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'whichDirectionToPutShip(Scanner)' has a cyclomatic complexity of 10.
</violation>
<violation beginline="409" endline="409" begincolumn="21" endcolumn="37" rule="PositionLiteralsFirstInComparisons" ruleset="Best Practices" package="model" class="Player" method="whichDirectionToPutShip" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#positionliteralsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="409" endline="409" begincolumn="42" endcolumn="58" rule="PositionLiteralsFirstInComparisons" ruleset="Best Practices" package="model" class="Player" method="whichDirectionToPutShip" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#positionliteralsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="412" endline="412" begincolumn="28" endcolumn="44" rule="PositionLiteralsFirstInComparisons" ruleset="Best Practices" package="model" class="Player" method="whichDirectionToPutShip" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#positionliteralsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="412" endline="412" begincolumn="49" endcolumn="65" rule="PositionLiteralsFirstInComparisons" ruleset="Best Practices" package="model" class="Player" method="whichDirectionToPutShip" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#positionliteralsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="428" endline="462" begincolumn="12" endcolumn="5" rule="CyclomaticComplexity" ruleset="Design" package="model" class="Player" method="whichDirectionToPutShipForSecondPlayer" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'whichDirectionToPutShipForSecondPlayer(Scanner)' has a cyclomatic complexity of 10.
</violation>
<violation beginline="450" endline="450" begincolumn="21" endcolumn="37" rule="PositionLiteralsFirstInComparisons" ruleset="Best Practices" package="model" class="Player" method="whichDirectionToPutShipForSecondPlayer" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#positionliteralsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="450" endline="450" begincolumn="42" endcolumn="58" rule="PositionLiteralsFirstInComparisons" ruleset="Best Practices" package="model" class="Player" method="whichDirectionToPutShipForSecondPlayer" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#positionliteralsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="453" endline="453" begincolumn="28" endcolumn="44" rule="PositionLiteralsFirstInComparisons" ruleset="Best Practices" package="model" class="Player" method="whichDirectionToPutShipForSecondPlayer" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#positionliteralsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="453" endline="453" begincolumn="49" endcolumn="65" rule="PositionLiteralsFirstInComparisons" ruleset="Best Practices" package="model" class="Player" method="whichDirectionToPutShipForSecondPlayer" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#positionliteralsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
</file>
<file name="/Users/cuenc/Documents/PF2-Project/src/model/Ship.java">
<violation beginline="17" endline="491" begincolumn="8" endcolumn="1" rule="GodClass" ruleset="Design" package="model" class="Ship" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#godclass" priority="3">
Possible God Class (WMC=59, ATFD=9, TCC=12.434%)
</violation>
<violation beginline="22" endline="22" begincolumn="29" endcolumn="33" rule="UnusedPrivateField" ruleset="Best Practices" package="model" class="Ship" variable="ships" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedprivatefield" priority="3">
Avoid unused private fields such as 'ships'.
</violation>
<violation beginline="27" endline="27" begincolumn="21" endcolumn="26" rule="UnusedPrivateField" ruleset="Best Practices" package="model" class="Ship" variable="issunk" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedprivatefield" priority="3">
Avoid unused private fields such as 'issunk'.
</violation>
<violation beginline="27" endline="27" begincolumn="13" endcolumn="27" rule="SingularField" ruleset="Design" package="model" class="Ship" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#singularfield" priority="3">
Perhaps 'issunk' could be replaced by a local variable.
</violation>
<violation beginline="28" endline="28" begincolumn="21" endcolumn="26" rule="UnusedPrivateField" ruleset="Best Practices" package="model" class="Ship" variable="isshot" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedprivatefield" priority="3">
Avoid unused private fields such as 'isshot'.
</violation>
<violation beginline="28" endline="28" begincolumn="13" endcolumn="35" rule="SingularField" ruleset="Design" package="model" class="Ship" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#singularfield" priority="3">
Perhaps 'isshot' could be replaced by a local variable.
</violation>
<violation beginline="29" endline="29" begincolumn="21" endcolumn="25" rule="UnusedPrivateField" ruleset="Best Practices" package="model" class="Ship" variable="isHit" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedprivatefield" priority="3">
Avoid unused private fields such as 'isHit'.
</violation>
<violation beginline="29" endline="29" begincolumn="13" endcolumn="34" rule="SingularField" ruleset="Design" package="model" class="Ship" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#singularfield" priority="3">
Perhaps 'isHit' could be replaced by a local variable.
</violation>
<violation beginline="30" endline="30" begincolumn="21" endcolumn="28" rule="UnusedPrivateField" ruleset="Best Practices" package="model" class="Ship" variable="isHidden" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedprivatefield" priority="3">
Avoid unused private fields such as 'isHidden'.
</violation>
<violation beginline="30" endline="30" begincolumn="13" endcolumn="29" rule="SingularField" ruleset="Design" package="model" class="Ship" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#singularfield" priority="3">
Perhaps 'isHidden' could be replaced by a local variable.
</violation>
<violation beginline="31" endline="31" begincolumn="17" endcolumn="30" rule="UnusedPrivateField" ruleset="Best Practices" package="model" class="Ship" variable="shipIdentifier" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedprivatefield" priority="3">
Avoid unused private fields such as 'shipIdentifier'.
</violation>
<violation beginline="31" endline="31" begincolumn="13" endcolumn="31" rule="SingularField" ruleset="Design" package="model" class="Ship" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#singularfield" priority="3">
Perhaps 'shipIdentifier' could be replaced by a local variable.
</violation>
<violation beginline="32" endline="32" begincolumn="12" endcolumn="73" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="model" class="Ship" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the shipCoordinates field if you want a default access modifier
</violation>
<violation beginline="32" endline="32" begincolumn="5" endcolumn="73" rule="DefaultPackage" ruleset="Code Style" package="model" class="Ship" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#defaultpackage" priority="3">
Use explicit scoping instead of the default package private level
</violation>
<violation beginline="49" endline="49" begincolumn="97" endcolumn="104" rule="UnusedFormalParameter" ruleset="Best Practices" package="model" class="Ship" method="Ship" variable="isHidden" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedformalparameter" priority="3">
Avoid unused constructor parameters such as 'isHidden'.
</violation>
<violation beginline="49" endline="49" begincolumn="115" endcolumn="119" rule="UnusedFormalParameter" ruleset="Best Practices" package="model" class="Ship" method="Ship" variable="isHit" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedformalparameter" priority="3">
Avoid unused constructor parameters such as 'isHit'.
</violation>
<violation beginline="51" endline="51" begincolumn="13" endcolumn="22" rule="AssignmentToNonFinalStatic" ruleset="Error Prone" package="model" class="Ship" method="Ship" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#assignmenttononfinalstatic" priority="3">
Possible unsafe assignment to a non-final static field in a constructor.
</violation>
<violation beginline="52" endline="52" begincolumn="13" endcolumn="22" rule="AssignmentToNonFinalStatic" ruleset="Error Prone" package="model" class="Ship" method="Ship" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#assignmenttononfinalstatic" priority="3">
Possible unsafe assignment to a non-final static field in a constructor.
</violation>
<violation beginline="67" endline="67" begincolumn="13" endcolumn="22" rule="AssignmentToNonFinalStatic" ruleset="Error Prone" package="model" class="Ship" method="Ship" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#assignmenttononfinalstatic" priority="3">
Possible unsafe assignment to a non-final static field in a constructor.
</violation>
<violation beginline="68" endline="68" begincolumn="13" endcolumn="22" rule="AssignmentToNonFinalStatic" ruleset="Error Prone" package="model" class="Ship" method="Ship" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#assignmenttononfinalstatic" priority="3">
Possible unsafe assignment to a non-final static field in a constructor.
</violation>
<violation beginline="96" endline="98" begincolumn="19" endcolumn="5" rule="BooleanGetMethodName" ruleset="Code Style" package="model" class="Ship" method="getDirection" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#booleangetmethodname" priority="4">
A getX() method which returns a boolean should be named isX()
</violation>
</file>
<file name="/Users/cuenc/Documents/PF2-Project/src/tui/TuiUtil.java">
<violation beginline="3" endline="3" begincolumn="1" endcolumn="16" rule="UnusedImports" ruleset="Best Practices" package="tui" class="TuiUtil" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedimports" priority="4">
Avoid unused imports such as 'model.Ai'
</violation>
<violation beginline="18" endline="192" begincolumn="22" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="tui" class="TuiUtil" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="22" endline="22" begincolumn="27" endcolumn="30" rule="UnusedPrivateField" ruleset="Best Practices" package="tui" class="TuiUtil" variable="name" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#unusedprivatefield" priority="3">
Avoid unused private fields such as 'name'.
</violation>
<violation beginline="24" endline="24" begincolumn="23" endcolumn="26" rule="FieldNamingConventions" ruleset="Code Style" package="tui" class="TuiUtil" variable="game" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#fieldnamingconventions" priority="1">
The constant name 'game' doesn't match '[A-Z][A-Z_0-9]*'
</violation>
<violation beginline="24" endline="24" begincolumn="18" endcolumn="40" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="tui" class="TuiUtil" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the game field if you want a default access modifier
</violation>
<violation beginline="24" endline="24" begincolumn="5" endcolumn="40" rule="DefaultPackage" ruleset="Code Style" package="tui" class="TuiUtil" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#defaultpackage" priority="3">
Use explicit scoping instead of the default package private level
</violation>
<violation beginline="35" endline="36" begincolumn="12" endcolumn="40" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="tui" class="TuiUtil" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the ship field if you want a default access modifier
</violation>
<violation beginline="35" endline="36" begincolumn="5" endcolumn="40" rule="DefaultPackage" ruleset="Code Style" package="tui" class="TuiUtil" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_codestyle.html#defaultpackage" priority="3">
Use explicit scoping instead of the default package private level
</violation>
<violation beginline="45" endline="191" begincolumn="19" endcolumn="5" rule="ExcessiveMethodLength" ruleset="Design" package="tui" class="TuiUtil" method="run" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#excessivemethodlength" priority="3">
Avoid really long methods.
</violation>
<violation beginline="45" endline="191" begincolumn="19" endcolumn="5" rule="NcssCount" ruleset="Design" package="tui" class="TuiUtil" method="run" externalInfoUrl="https://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#ncsscount" priority="3">
The method 'run()' has a NCSS line count of 64.
</violation>
</file>
<error filename="/Users/cuenc/Documents/PF2-Project/src/gui/Main.java" msg="PMDException: Error while parsing /Users/cuenc/Documents/PF2-Project/src/gui/Main.java">
<![CDATA[net.sourceforge.pmd.PMDException: Error while parsing /Users/cuenc/Documents/PF2-Project/src/gui/Main.java
	at net.sourceforge.pmd.SourceCodeProcessor.processSourceCodeWithoutCache(SourceCodeProcessor.java:110)
	at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:89)
	at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:51)
	at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:78)
	at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:24)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: net.sourceforge.pmd.lang.java.ast.ParseException: Line 89, Column 35: Cannot use lambda expressions when running in JDK inferior to 1.8 mode!
	at net.sourceforge.pmd.lang.java.ast.JavaParser.throwParseException(JavaParser.java:28)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.checkForBadLambdaUsage(JavaParser.java:111)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.LambdaExpression(JavaParser.java:3942)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.PrimaryPrefix(JavaParser.java:3878)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.PrimaryExpression(JavaParser.java:3698)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.PostfixExpression(JavaParser.java:3525)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.UnaryExpressionNotPlusMinus(JavaParser.java:3483)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.UnaryExpression(JavaParser.java:3360)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.MultiplicativeExpression(JavaParser.java:3275)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.AdditiveExpression(JavaParser.java:3222)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.ShiftExpression(JavaParser.java:3165)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.RelationalExpression(JavaParser.java:3104)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.InstanceOfExpression(JavaParser.java:3068)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.EqualityExpression(JavaParser.java:3015)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.AndExpression(JavaParser.java:2975)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.ExclusiveOrExpression(JavaParser.java:2935)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.InclusiveOrExpression(JavaParser.java:2895)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.ConditionalAndExpression(JavaParser.java:2855)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.ConditionalOrExpression(JavaParser.java:2815)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.ConditionalExpression(JavaParser.java:2777)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.Expression(JavaParser.java:2634)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.ArgumentList(JavaParser.java:4428)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.Arguments(JavaParser.java:4394)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.PrimarySuffix(JavaParser.java:4220)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.PrimaryExpression(JavaParser.java:3706)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.PostfixExpression(JavaParser.java:3525)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.StatementExpression(JavaParser.java:5022)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.Statement(JavaParser.java:4666)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.BlockStatement(JavaParser.java:4825)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.Block(JavaParser.java:4781)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.MethodDeclaration(JavaParser.java:1615)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.ClassOrInterfaceBodyDeclaration(JavaParser.java:1296)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.ClassOrInterfaceBody(JavaParser.java:1251)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.ClassOrInterfaceDeclaration(JavaParser.java:707)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.TypeDeclaration(JavaParser.java:618)
	at net.sourceforge.pmd.lang.java.ast.JavaParser.CompilationUnit(JavaParser.java:352)
	at net.sourceforge.pmd.lang.java.AbstractJavaParser.parse(AbstractJavaParser.java:62)
	at net.sourceforge.pmd.SourceCodeProcessor.parse(SourceCodeProcessor.java:121)
	at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:185)
	at net.sourceforge.pmd.SourceCodeProcessor.processSourceCodeWithoutCache(SourceCodeProcessor.java:107)
	... 10 more
]]>
</error>
</pmd>
